resources:
 repositories:
   - repository: utilities
     type: git
     name: Utilities

pool:
  vmImage: 'ubuntu-latest'

trigger:
  branches:
    include:
    - master

steps:
# CurrentRepo // Måste checkas ut eftersom vi vill göra en dockercontainer av detta
  - checkout: self
# Utilities // Måste checkas ut eftersom vi vill ha en kuberneteskonfiguration i vår artefakt härifrån
  - checkout: Utilities
  - template: BuildTemplates/BuildAngularApp.yaml@utilities
    parameters: 
      projectName: CurrentRepo/CodeTech.Web
      configuration: production
      outputPath: $(Build.ArtifactStagingDirectory)
  - task: Docker@2
    displayName: Create and publish docker container to container registry
    inputs:
      containerRegistry: 'DockerContainerRegistry'
      repository: 'CodeTech.Web'
      command: 'buildAndPush'
      Dockerfile: 'CurrentRepo/**/Dockerfile'
  - task: CopyFiles@2
    displayName: Copy Kubernetes configuration file to artifact folder
    inputs:
      SourceFolder: $(Build.SourcesDirectory)/Utilities/KubernetesConfigurations
      Contents: 'CodeTech.Web.Deployment.yaml'
      CleanTargetFolder: true
      TargetFolder: $(Build.ArtifactStagingDirectory)
# TODO: Parameterisera kubernetes konfigurationsfil och gör generisk
  - task: PublishBuildArtifacts@1
    displayName: Publish Kubernetes configuration file
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'